// class %class_name%
//
// Automaticaly generated file
// Generated by: %USERNAME%
// Time: %TIMESTAMP%
// Path: %code_path%

using System;
using System.Collections.Generic;
using System.Text;
using System.Data;

namespace %namespace%
{
    /// <summary>
    /// Typed DataRow for table: %table_name%
    /// </summary>
	public class %class_name% : DataRow
	{
        /// <summary>
        /// Constructor
        /// This class isn't manually created, use DataTable.NewDbRow()
        /// </summary>
        /// <param name="dataRowBuilder"></param>
		public %class_name%(DataRowBuilder dataRowBuilder)
			: base(dataRowBuilder)
		{
		}

        /// <summary>
        /// Get array of primery key columns
        /// </summary>
        /// <returns>string array of primary key columns</returns>
		public static string[] GetPKeys()
		{
			return new string[] { <%key_columns%>[, ]"%key_column%"<%key_columns%> };
		}

        /// <summary>
        /// Get array of all columns
        /// </summary>
        /// <returns>string array of columns</returns>
		public static string[] GetColumns()
		{
			return new string[] { <%all_columns%>[, ]"%column_name%"<%all_columns%> };
		}
		
		<%all_columns%>
		/// <summary>
        /// Column %column_name%
        /// </summary>
		public static string %column_name%Column = "%column_name%";
		
		/// <summary>
        /// Get or Set %column_name% value
        /// </summary>
		public %column_type% %column_name%
		{
			get { return (%column_type%)this[%column_name%Column]; }
			set { this[%column_name%Column] = value; }
		}
		<%all_columns%>
	}
}